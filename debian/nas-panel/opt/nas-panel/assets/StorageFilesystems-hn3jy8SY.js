import{_ as Qe,r as c,u as Je,y as P,c as te,C as be,o as Xe,Q as et,a as $,b as n,e as l,w as s,v as tt,g as V,h as g,f as v,F as T,k as E,l as b,t as m,d as f,x as at,j as z,I as _,n as lt,B as ne,E as F,z as st}from"./index-BdZFAIpY.js";const ot={class:"widget-header"},it={class:"header-actions"},nt={class:"fstab-editor-container"},ut={class:"editor-actions",style:{"margin-top":"15px"}},rt={key:0,class:"warning-message"},dt={class:"device-cell"},mt={class:"size-cell"},ct={class:"mount-cell"},ft={key:0,class:"read-only-badge"},pt={key:0,class:"error-message"},vt={class:"disk-usage-container"},yt={class:"disk-size-info"},gt={class:"partition-list"},bt={class:"partition-size-info"},ht={name:"StorageFilesystemsWidget",displayName:"Systemy plików"},wt=Object.assign(ht,{setup(kt){const Z=c(new AbortController),{t:x}=Je(),N=P.create({baseURL:`${window.location.protocol}//${window.location.hostname}:3000`,signal:Z.value.signal}),L=c([]),G=c([]),h=c(!1),D=c(null),q=c(!1),H=c(""),M=c(!1),ae=c([]),j=c(!1),le=c(!1),u=c({device:"",partition:"",mountPoint:"",fsType:"ext4",options:"defaults,nofail",zfsPoolName:""}),R=c(!1),se=c(!1),d=c({device:"",fsType:"ext4",label:"",zfsPoolName:"zpool",force:!1}),ue=c(["bcachefs","btrfs","ext4","f2fs","jfs","xfs","zfs"]),w=c(0),Q=c(0),W=c(0),he=async()=>{try{const e=await N.get("/api/storage/fstab-check");ae.value=e.data.entries}catch(e){console.error("Error loading fstab entries:",e)}},we=(e,t)=>ae.value.some(o=>{const r=o.device===e||e.includes(o.device)||o.device.includes(e),i=o.mountPoint===t;return r||i});te(()=>G.value.flatMap(e=>{const t={path:e.path,model:e.model,type:e.type},o=e.partitions?.map(r=>({path:r.path,model:e.model,type:r.type}))||[];return[t,...o]}).filter(e=>!e.path.includes("loop")));const re=te(()=>{const e=L.value.map(t=>t.device);return G.value.filter(t=>!e.includes(t.path)&&!t.path.includes("loop")&&!t.path.includes("ram")&&t.type==="disk"&&!O(t.path))}),ke=te(()=>{const e=L.value.map(t=>t.device);return G.value.flatMap(t=>(t.partitions||[]).filter(o=>!e.includes(o.path)&&!o.path.includes("loop")&&!o.path.includes("ram")).map(o=>({...o,model:t.model||"Unknown"})))});function O(e){return["/dev/sda","/dev/nvme0n1"].some(o=>e.startsWith(o))}const J=c([]),ze=e=>{const t=G.value.find(o=>o.path===e);J.value=t?.partitions||[],u.value.partition=J.value[0]?.path||""},de=async()=>{try{M.value=!0;const e=await N.get("/api/storage/fstab-content");H.value=e.data.content}catch(e){F({title:"Error",message:e.response?.data?.details||e.message,type:"error"})}finally{M.value=!1}},_e=async()=>{try{M.value=!0,await N.post("/api/storage/save-fstab",{content:H.value}),F({title:"Success",message:"Fstab saved successfully",type:"success"}),q.value=!1}catch(e){F({title:"Error",message:e.response?.data?.details||e.message,type:"error"})}finally{M.value=!1}},Fe=async()=>{try{await ne.confirm("You are about to edit system fstab file. Make sure you know what you are doing.","Warning",{confirmButtonText:"Continue",cancelButtonText:"Cancel",type:"warning"}),q.value=!0,await de()}catch(e){e!=="cancel"&&F({title:"Error",message:e.message,type:"error"})}},$e=async()=>{try{h.value=!0,await I(),j.value=!0}catch(e){D.value=x("storageFilesystems.errorLoadingDevices"),console.error("Error loading devices:",e)}finally{h.value=!1}},Ve=async()=>{try{h.value=!0,await I(),R.value=!0}catch(e){D.value=x("storageFilesystems.errorLoadingDevices"),console.error("Error loading devices:",e)}finally{h.value=!1}},me=async(e,t,o,r,i)=>{try{const k=await P.post("/api/storage/fstab",{action:i?"add":"remove",device:e,mountPoint:t,fsType:o,options:r});if(k.data.success){const y=L.value.findIndex(C=>C.device===e&&C.mounted===t);return y!==-1&&(L.value[y].inFstab=i),F({title:"Success",message:k.data.message,type:"success"}),!0}return!1}catch(k){return F({title:"Error",message:k.response?.data?.details||k.message,type:"error"}),!1}},De=async()=>{try{le.value=!0,D.value=null;const e=u.value.partition||u.value.device,t=u.value.fsType==="zfs",o=t&&!u.value.mountPoint?u.value.zfsPoolName||"zpool":u.value.mountPoint;let r=!1;if(!t)try{await ne.confirm("Czy dodać to montowanie do /etc/fstab dla automatycznego montowania przy starcie systemu?","Dodawanie do fstab",{confirmButtonText:"Tak, dodaj do fstab",cancelButtonText:"Nie",type:"info"}),r=!0}catch{}await I();const i=await P.post("/api/storage/mount",{device:e,mountPoint:o,fsType:u.value.fsType,options:u.value.options,zfsPoolName:u.value.zfsPoolName});i.data.success&&(r&&!i.data.addedToFstab&&!t&&await me(e,o,u.value.fsType,u.value.options,!0),F({title:"Success",message:i.data.isZfs?`ZFS pool ${u.value.zfsPoolName||"zpool"} mounted successfully`:"Device mounted successfully",type:"success"}),j.value=!1,await A())}catch(e){D.value=e.response?.data?.details||e.message,F({title:"Mount Error",message:D.value,type:"error",duration:0})}finally{le.value=!1}},Ce=async()=>{try{if(se.value=!0,d.value.fsType==="zfs"){const t=d.value.device.replace(/[0-9]+$/,"");try{await ne.confirm(`<strong>UWAGA: ZFS wymaga całego dysku!</strong><br><br>
          Będziemy używać <strong>${t}</strong> zamiast ${d.value.device}.<br>
          <span style="color:red;">WSZYSTKIE DANE NA DYSKU ZOSTANĄ USUNIĘTE.</span><br><br>
          Kontynuować?`,"Potwierdzenie tworzenia ZFS",{confirmButtonText:"Tak, utwórz ZFS",cancelButtonText:"Anuluj",type:"error",dangerouslyUseHTMLString:!0})}catch{return}}const e=await P.post("/api/storage/format",{device:d.value.device,fsType:d.value.fsType,label:d.value.zfsPoolName,force:!0});F.success({title:"Sukces",message:`Utworzono ${d.value.fsType.toUpperCase()} na ${e.data.deviceUsed}`,duration:5e3}),R.value=!1,await A()}catch(e){let t=e.response?.data?.details||e.message;t.includes("no such device")&&(t=`Urządzenie ${e.response?.data?.targetDevice} nie istnieje`),F.error({title:"Błąd formatowania",message:t,duration:0})}finally{se.value=!1}},Ue=async e=>{try{h.value=!0;const t=await P.post("/api/storage/unmount",{mountPoint:e});F({title:"Success",message:t.data.isZfs?"ZFS pool unmounted successfully":"Filesystem unmounted successfully",type:"success"}),await A()}catch(t){D.value=t.response?.data?.details||t.message,F({title:"Unmount Error",message:D.value,type:"error",duration:0})}finally{h.value=!1}},I=async()=>{try{const e=await P.get("/api/storage/devices");G.value=e.data.data||[]}catch(e){throw console.error("Error fetching devices:",e),e}},A=async()=>{Z.value.abort(),Z.value=new AbortController,N.defaults.signal=Z.value.signal;try{h.value=!0;const[e,t]=await Promise.all([N.get("/api/storage/filesystems"),N.get("/api/storage/fstab-check")]);Array.isArray(e.data?.data)&&(L.value=e.data.data.map(o=>({...o,inFstab:we(o.device,o.mounted),fstabLoading:!1}))),ae.value=t.data.entries||[]}catch(e){P.isCancel(e)||(e.value=x("storageFilesystems.errorLoading"),console.error("Error fetching filesystems:",e))}finally{h.value=!1}},Pe=e=>e?.includes("nvme")?"mdi:memory":e?.includes("sd")||e?.includes("hd")?"mdi:harddisk":e?.includes("md")?"mdi:raid":e?.includes("zfs")?"mdi:database":"mdi:harddisk",Te=e=>({ext4:"mdi:linux",xfs:"mdi:file-tree",ntfs:"mdi:windows",fat:"mdi:usb-flash-drive",zfs:"mdi:database",btrfs:"mdi:database",bcachefs:"mdi:database",f2fs:"mdi:flash",jfs:"mdi:file-tree"})[e.toLowerCase()]||"mdi:file-question",Se=e=>({active:"mdi:check-circle",inactive:"mdi:close-circle",readonly:"mdi:lock",error:"mdi:alert-circle",unknown:"mdi:help-circle"})[e.toLowerCase()]||"mdi:help-circle",Ee=e=>({active:"success",inactive:"info",readonly:"warning",error:"danger",unknown:""})[e.toLowerCase()]||"",ce=e=>e>90?"#F56C6C":e>70?"#E6A23C":"#67C23A",K=(e,t=2)=>{if(!e)return"0 Bytes";const o=1024,r=["Bytes","KB","MB","GB","TB"],i=Math.floor(Math.log(e)/Math.log(o));return parseFloat((e/Math.pow(o,i)).toFixed(t))+" "+r[i]},Y=c(!1),oe=c(!1),p=c({device:"",scheme:"gpt",partitions:[{size:100,unit:"%",type:"8300"}]}),Me=te(()=>G.value.filter(e=>e.type==="disk"&&!e.path.includes("loop")&&!O(e.path))),Be=async()=>{try{h.value=!0,await I(),Y.value=!0}catch(e){D.value=x("storageFilesystems.errorLoadingDevices"),console.error("Error loading devices:",e)}finally{h.value=!1}},Ne=()=>{p.value.partitions.push({size:10,unit:"G",type:"8300"})},Le=e=>{p.value.partitions.splice(e,1)},Ge=e=>{O(e)&&st.warning("This appears to be a system disk. Partitioning system disks is not recommended.")},Ie=async()=>{try{if(oe.value=!0,Oe(),O(p.value.device))throw new Error("Cannot partition system disk");let e=`sudo sgdisk --zap-all ${p.value.device} && `;e+=`sudo parted -s ${p.value.device} mklabel ${p.value.scheme} && `,p.value.partitions.forEach((o,r)=>{const i=o.unit==="%"?`${o.size}%`:`${o.size}${o.unit}`;e+=`sudo sgdisk -n ${r+1}:0:+${i} -t ${r+1}:${o.type} ${p.value.device} && `}),e+=`sudo partprobe ${p.value.device}`;const t=await P.post("/api/storage/exec-command",{command:e,timeout:6e4});F({title:"Success",message:"Partitions created successfully",type:"success"}),Y.value=!1,await I(),await A()}catch(e){F({title:"Error",message:e.response?.data?.details||e.message,type:"error"})}finally{oe.value=!1}},Ae=async e=>{try{const t=await P.get("/api/storage/disk-size",{params:{device:e}});w.value=t.data.size,fe()}catch(t){console.error("Error getting disk size:",t),w.value=0}},fe=()=>{let e=0;p.value.partitions.forEach(t=>{t.unit==="%"?e+=t.size/100*w.value:t.unit==="G"?e+=t.size*1024*1024*1024:e+=t.size*1024*1024}),Q.value=Math.min(e,w.value),W.value=Math.round(Q.value/w.value*100)},Ze=e=>{if(e.unit==="%"){const t=e.size/100*w.value;return K(t)}else return e.unit==="G"?`${e.size} GB`:`${e.size} MB`},je=e=>e.unit==="%"?100:e.unit==="G"?Math.floor(w.value/(1024*1024*1024)):Math.floor(w.value/(1024*1024)),Re=e=>!w.value||e==="%"?100:Math.floor(e==="G"?w.value/(1024*1024*1024):w.value/(1024*1024)),We=(e,t)=>{const o=e.unit;if(e.unit=t,o==="%"&&t!=="%"){const i=e.size/100*w.value;t==="G"?e.size=Math.floor(i/(1024*1024*1024)):e.size=Math.floor(i/(1024*1024))}else if(o!=="%"&&t==="%"){const i=o==="G"?e.size*1024*1024*1024:e.size*1024*1024;e.size=Math.floor(i/w.value*100)}const r=Re(t);e.size>r&&(e.size=r)},Oe=()=>{let e=0,t=0;for(const o of p.value.partitions)if(o.unit==="%")e+=o.size;else{const r=o.unit==="G"?o.size*1024*1024*1024:o.size*1024*1024;t+=r}if(e>100)throw new Error("Suma partycji procentowych nie może przekroczyć 100%");if(t>w.value)throw new Error("Suma partycji nie może przekroczyć rozmiaru dysku");return!0};return be(()=>p.value.device,e=>{e?Ae(e):(w.value=0,Q.value=0,W.value=0)}),be(()=>p.value.partitions,()=>{fe()},{deep:!0}),Xe(()=>{A(),I(),he()}),et(()=>{Z.value.abort()}),(e,t)=>{const o=g("el-button"),r=g("el-tooltip"),i=g("el-option"),k=g("el-select"),y=g("el-form-item"),C=g("el-input"),ie=g("el-form"),X=g("el-dialog"),pe=g("el-alert"),ve=g("el-switch"),U=g("el-table-column"),ee=g("el-tag"),ye=g("el-progress"),Ke=g("el-table"),Ye=g("el-card"),ge=g("el-radio"),xe=g("el-radio-group"),qe=g("el-input-number"),He=at("loading");return n(),$(T,null,[l(Ye,{class:"filesystems-widget"},{header:s(()=>[f("div",ot,[l(z(_),{icon:"mdi:file-tree",width:"20",height:"20"}),f("span",null,m(e.$t("storageFilesystems.title")),1),f("div",it,[l(r,{content:e.$t("storageFilesystems.mount")},{default:s(()=>[l(o,{size:"small",onClick:$e,disabled:h.value,text:""},{default:s(()=>[l(z(_),{icon:"mdi:usb-flash-drive",width:"16",height:"16"})]),_:1},8,["disabled"])]),_:1},8,["content"]),l(r,{content:e.$t("storageFilesystems.format")},{default:s(()=>[l(o,{size:"small",onClick:Ve,disabled:h.value,text:""},{default:s(()=>[l(z(_),{icon:"mdi:format-list-checks",width:"16",height:"16"})]),_:1},8,["disabled"])]),_:1},8,["content"]),l(r,{content:e.$t("storageFilesystems.refresh")},{default:s(()=>[l(o,{size:"small",onClick:A,loading:h.value,text:""},{default:s(()=>[l(z(_),{icon:"mdi:refresh",width:"16",height:"16",class:lt({spin:h.value})},null,8,["class"])]),_:1},8,["loading"])]),_:1},8,["content"]),l(r,{content:e.$t("storageFilesystems.partition")},{default:s(()=>[l(o,{size:"small",onClick:Be,disabled:h.value,text:""},{default:s(()=>[l(z(_),{icon:"mdi:harddisk-plus",width:"16",height:"16"})]),_:1},8,["disabled"])]),_:1},8,["content"]),l(r,{content:e.$t("storageFilesystems.editFstab")},{default:s(()=>[l(o,{size:"small",onClick:Fe,disabled:h.value,text:""},{default:s(()=>[l(z(_),{icon:"mdi:file-edit",width:"16",height:"16"})]),_:1},8,["disabled"])]),_:1},8,["content"])])])]),default:s(()=>[l(X,{modelValue:j.value,"onUpdate:modelValue":t[7]||(t[7]=a=>j.value=a),title:e.$t("storageFilesystems.mountDialog.title"),width:"500px"},{footer:s(()=>[l(o,{onClick:t[6]||(t[6]=a=>j.value=!1)},{default:s(()=>[b(m(e.$t("common.cancel")),1)]),_:1}),l(o,{type:"primary",onClick:De,loading:le.value},{default:s(()=>[b(m(e.$t("storageFilesystems.mountDialog.mount")),1)]),_:1},8,["loading"])]),default:s(()=>[l(ie,{model:u.value,"label-position":"top"},{default:s(()=>[l(y,{label:e.$t("storageFilesystems.mountDialog.device")},{default:s(()=>[l(k,{modelValue:u.value.device,"onUpdate:modelValue":t[0]||(t[0]=a=>u.value.device=a),placeholder:e.$t("storageFilesystems.mountDialog.selectDevice"),onChange:ze,style:{width:"100%"}},{default:s(()=>[(n(!0),$(T,null,E(re.value,a=>(n(),v(i,{key:a.path,label:`${a.path} (${a.model||"Unknown"})`,value:a.path},null,8,["label","value"]))),128))]),_:1},8,["modelValue","placeholder"])]),_:1},8,["label"]),J.value.length>0?(n(),v(y,{key:0,label:e.$t("storageFilesystems.mountDialog.partition")},{default:s(()=>[l(k,{modelValue:u.value.partition,"onUpdate:modelValue":t[1]||(t[1]=a=>u.value.partition=a),placeholder:"Select partition",style:{width:"100%"}},{default:s(()=>[(n(!0),$(T,null,E(J.value,a=>(n(),v(i,{key:a.path,label:a.path,value:a.path},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1},8,["label"])):V("",!0),u.value.fsType!=="zfs"?(n(),v(y,{key:1,label:e.$t("storageFilesystems.mountDialog.mountPoint")},{default:s(()=>[l(C,{modelValue:u.value.mountPoint,"onUpdate:modelValue":t[2]||(t[2]=a=>u.value.mountPoint=a),placeholder:"/mnt/new_disk"},null,8,["modelValue"])]),_:1},8,["label"])):V("",!0),l(y,{label:e.$t("storageFilesystems.mountDialog.fsType")},{default:s(()=>[l(k,{modelValue:u.value.fsType,"onUpdate:modelValue":t[3]||(t[3]=a=>u.value.fsType=a),placeholder:e.$t("storageFilesystems.mountDialog.selectFsType"),style:{width:"100%"}},{default:s(()=>[(n(!0),$(T,null,E(ue.value,a=>(n(),v(i,{key:a,label:a,value:a.toLowerCase()},null,8,["label","value"]))),128))]),_:1},8,["modelValue","placeholder"])]),_:1},8,["label"]),u.value.fsType==="zfs"?(n(),v(y,{key:2,label:e.$t("storageFilesystems.mountDialog.zfsPoolName")},{default:s(()=>[l(C,{modelValue:u.value.zfsPoolName,"onUpdate:modelValue":t[4]||(t[4]=a=>u.value.zfsPoolName=a),placeholder:"mypool"},null,8,["modelValue"])]),_:1},8,["label"])):V("",!0),u.value.fsType!=="zfs"?(n(),v(y,{key:3,label:e.$t("storageFilesystems.mountDialog.options")},{default:s(()=>[l(C,{modelValue:u.value.options,"onUpdate:modelValue":t[5]||(t[5]=a=>u.value.options=a),placeholder:"defaults,nofail"},null,8,["modelValue"])]),_:1},8,["label"])):V("",!0)]),_:1},8,["model"])]),_:1},8,["modelValue","title"]),l(X,{modelValue:q.value,"onUpdate:modelValue":t[9]||(t[9]=a=>q.value=a),title:"Edit /etc/fstab",width:"800px","close-on-click-modal":!1},{default:s(()=>[f("div",nt,[l(pe,{type:"warning",closable:!1,style:{"margin-bottom":"15px"}},{default:s(()=>t[21]||(t[21]=[b(" Warning: Incorrect modifications may prevent your system from booting properly. ")])),_:1,__:[21]}),l(C,{modelValue:H.value,"onUpdate:modelValue":t[8]||(t[8]=a=>H.value=a),type:"textarea",rows:20,resize:"none",placeholder:"Loading fstab content...",loading:M.value},null,8,["modelValue","loading"]),f("div",ut,[l(o,{onClick:de,loading:M.value},{default:s(()=>t[22]||(t[22]=[b(" Reload ")])),_:1,__:[22]},8,["loading"]),l(o,{type:"primary",onClick:_e,loading:M.value},{default:s(()=>t[23]||(t[23]=[b(" Save ")])),_:1,__:[23]},8,["loading"])])])]),_:1},8,["modelValue"]),l(X,{modelValue:R.value,"onUpdate:modelValue":t[16]||(t[16]=a=>R.value=a),title:e.$t("storageFilesystems.formatDialog.title"),width:"500px"},{footer:s(()=>[l(o,{onClick:t[15]||(t[15]=a=>R.value=!1)},{default:s(()=>[b(m(e.$t("common.cancel")),1)]),_:1}),l(o,{type:"danger",onClick:Ce,loading:se.value},{default:s(()=>[b(m(e.$t("storageFilesystems.formatDialog.format")),1)]),_:1},8,["loading"])]),default:s(()=>[l(ie,{model:d.value,"label-position":"top"},{default:s(()=>[l(y,{label:e.$t("storageFilesystems.formatDialog.device")},{default:s(()=>[l(k,{modelValue:d.value.device,"onUpdate:modelValue":t[10]||(t[10]=a=>d.value.device=a),placeholder:e.$t("storageFilesystems.formatDialog.selectDevice"),style:{width:"100%"}},{default:s(()=>[(n(!0),$(T,null,E(ke.value,a=>(n(),v(i,{key:a.path,label:`${a.path} (${a.model||"Unknown"}) ${a.fstype?`[${a.fstype}]`:""}`,value:a.path},null,8,["label","value"]))),128)),(n(!0),$(T,null,E(re.value,a=>(n(),v(i,{key:a.path,label:`${a.path} (${a.model||"Unknown"})`,value:a.path},null,8,["label","value"]))),128))]),_:1},8,["modelValue","placeholder"])]),_:1},8,["label"]),l(y,{label:e.$t("storageFilesystems.formatDialog.fsType")},{default:s(()=>[l(k,{modelValue:d.value.fsType,"onUpdate:modelValue":t[11]||(t[11]=a=>d.value.fsType=a),placeholder:e.$t("storageFilesystems.formatDialog.selectFsType"),style:{width:"100%"}},{default:s(()=>[(n(!0),$(T,null,E(ue.value,a=>(n(),v(i,{key:a,label:a,value:a.toLowerCase()},null,8,["label","value"]))),128))]),_:1},8,["modelValue","placeholder"])]),_:1},8,["label"]),d.value.fsType==="zfs"?(n(),v(y,{key:0,label:e.$t("storageFilesystems.formatDialog.zfsPoolName")},{default:s(()=>[l(C,{modelValue:d.value.zfsPoolName,"onUpdate:modelValue":t[12]||(t[12]=a=>d.value.zfsPoolName=a),placeholder:"mypool"},null,8,["modelValue"])]),_:1},8,["label"])):V("",!0),d.value.fsType==="zfs"?(n(),v(y,{key:1,label:"Urządzenie (automatycznie wybrano cały dysk)"},{default:s(()=>[l(C,{value:d.value.device.replace(/[0-9]+$/,""),disabled:""},null,8,["value"]),t[24]||(t[24]=f("div",{class:"el-form-item__description"}," ZFS wymaga całego dysku (np. /dev/sda zamiast /dev/sda1) ",-1))]),_:1,__:[24]})):(n(),v(y,{key:2,label:e.$t("storageFilesystems.formatDialog.label")},{default:s(()=>[l(C,{modelValue:d.value.label,"onUpdate:modelValue":t[13]||(t[13]=a=>d.value.label=a),placeholder:`${d.value.fsType.toUpperCase()}_VOLUME`},null,8,["modelValue","placeholder"])]),_:1},8,["label"])),l(y,{label:e.$t("storageFilesystems.formatDialog.force")},{default:s(()=>[l(ve,{modelValue:d.value.force,"onUpdate:modelValue":t[14]||(t[14]=a=>d.value.force=a)},null,8,["modelValue"])]),_:1},8,["label"])]),_:1},8,["model"]),d.value.device?(n(),$("div",rt,[l(pe,{type:"warning",closable:!1},{default:s(()=>[b(m(e.$t("storageFilesystems.formatDialog.warning",{device:d.value.device})),1)]),_:1})])):V("",!0)]),_:1},8,["modelValue","title"]),tt((n(),v(Ke,{data:L.value,style:{width:"100%"}},{default:s(()=>[l(U,{label:e.$t("storageFilesystems.device"),prop:"device",width:"120"},{default:s(({row:a})=>[f("div",dt,[l(z(_),{icon:Pe(a.device),width:"18",height:"18"},null,8,["icon"]),f("span",null,m(a.device),1)])]),_:1},8,["label"]),l(U,{label:e.$t("storageFilesystems.tags"),prop:"tags",width:"100"},{default:s(({row:a})=>[a.tags?(n(),v(ee,{key:0,size:"small"},{default:s(()=>[b(m(a.tags),1)]),_:2},1024)):V("",!0)]),_:1},8,["label"]),l(U,{label:e.$t("storageFilesystems.type"),prop:"type",width:"100"},{default:s(({row:a})=>[l(z(_),{icon:Te(a.type),width:"16",height:"16"},null,8,["icon"]),f("span",null,m(a.type),1)]),_:1},8,["label"]),l(U,{label:e.$t("storageFilesystems.available"),prop:"available",width:"120"},{default:s(({row:a})=>[f("div",mt,[l(z(_),{icon:"mdi:harddisk-plus",width:"16",height:"16"}),f("span",null,m(K(a.available)),1)])]),_:1},8,["label"]),l(U,{label:e.$t("storageFilesystems.used"),prop:"used",width:"400"},{default:s(({row:a})=>[l(ye,{percentage:a.usedPercent,color:ce(a.usedPercent),"show-text":!1,"stroke-width":14},null,8,["percentage","color"]),f("span",null,m(K(a.used))+" ("+m(a.usedPercent)+"%)",1)]),_:1},8,["label"]),l(U,{label:e.$t("storageFilesystems.mounted"),prop:"mounted"},{default:s(({row:a})=>[f("div",ct,[l(z(_),{icon:"mdi:folder-marker",width:"16",height:"16"}),f("span",null,m(a.mounted),1)])]),_:1},8,["label"]),l(U,{label:"Auto-mount",width:"120"},{default:s(({row:a})=>[a.isZfs?(n(),v(ee,{key:1,type:"info",size:"small"},{default:s(()=>t[25]||(t[25]=[b("ZFS")])),_:1,__:[25]})):(n(),v(ve,{key:0,modelValue:a.inFstab,"onUpdate:modelValue":B=>a.inFstab=B,onChange:B=>me(a.device,a.mounted,a.type,a.options,B),loading:a.fstabLoading},null,8,["modelValue","onUpdate:modelValue","onChange","loading"]))]),_:1}),l(U,{label:e.$t("storageFilesystems.reference"),prop:"reference",width:"120"},{default:s(({row:a})=>[a.reference?(n(),v(ee,{key:0,size:"small",type:"info"},{default:s(()=>[b(m(a.reference),1)]),_:2},1024)):V("",!0)]),_:1},8,["label"]),l(U,{label:e.$t("storageFilesystems.status"),prop:"status",width:"120"},{default:s(({row:a})=>[l(ee,{type:Ee(a.status),size:"small"},{default:s(()=>[l(z(_),{icon:Se(a.status),width:"14",height:"14"},null,8,["icon"]),f("span",null,[b(m(a.status)+" ",1),a.readOnly?(n(),$("span",ft,"(RO)")):V("",!0)])]),_:2},1032,["type"])]),_:1},8,["label"]),l(U,{label:e.$t("storageFilesystems.actions"),width:"150"},{default:s(({row:a})=>[l(o,{size:"small",onClick:B=>Ue(a.mounted),disabled:a.status!=="active",text:""},{default:s(()=>[l(z(_),{icon:"mdi:eject",width:"16",height:"16"}),b(" "+m(e.$t("storageFilesystems.unmount")),1)]),_:2},1032,["onClick","disabled"])]),_:1},8,["label"])]),_:1},8,["data"])),[[He,h.value]]),D.value?(n(),$("div",pt,[l(z(_),{icon:"mdi:alert-circle",width:"18",height:"18"}),f("span",null,m(D.value),1)])):V("",!0)]),_:1}),l(X,{modelValue:Y.value,"onUpdate:modelValue":t[20]||(t[20]=a=>Y.value=a),title:e.$t("storageFilesystems.partitionDialog.title"),width:"700px"},{footer:s(()=>[l(o,{onClick:t[19]||(t[19]=a=>Y.value=!1)},{default:s(()=>[b(m(e.$t("common.cancel")),1)]),_:1}),l(o,{type:"primary",onClick:Ie,loading:oe.value,disabled:p.value.partitions.length===0},{default:s(()=>[b(m(e.$t("storageFilesystems.partitionDialog.create")),1)]),_:1},8,["loading","disabled"])]),default:s(()=>[l(ie,{model:p.value,"label-position":"top"},{default:s(()=>[l(y,{label:e.$t("storageFilesystems.partitionDialog.device")},{default:s(()=>[l(k,{modelValue:p.value.device,"onUpdate:modelValue":t[17]||(t[17]=a=>p.value.device=a),placeholder:e.$t("storageFilesystems.partitionDialog.selectDevice"),style:{width:"100%"},onChange:Ge},{default:s(()=>[(n(!0),$(T,null,E(Me.value,a=>(n(),v(i,{key:a.path,label:`${a.path} (${a.model||"Unknown"})`,value:a.path,disabled:O(a.path)},null,8,["label","value","disabled"]))),128))]),_:1},8,["modelValue","placeholder"])]),_:1},8,["label"]),p.value.device?(n(),v(y,{key:0,label:e.$t("storageFilesystems.partitionDialog.diskSize")},{default:s(()=>[f("div",vt,[l(ye,{percentage:W.value,color:ce(W.value),"show-text":!1,"stroke-width":20},null,8,["percentage","color"]),f("div",yt,[f("span",null,m(K(Q.value))+" / "+m(K(w.value)),1),f("span",null,"("+m(W.value)+"%)",1)])])]),_:1},8,["label"])):V("",!0),l(y,{label:e.$t("storageFilesystems.partitionDialog.scheme")},{default:s(()=>[l(xe,{modelValue:p.value.scheme,"onUpdate:modelValue":t[18]||(t[18]=a=>p.value.scheme=a)},{default:s(()=>[l(ge,{value:"gpt"},{default:s(()=>t[26]||(t[26]=[b("GPT")])),_:1,__:[26]}),l(ge,{value:"mbr"},{default:s(()=>t[27]||(t[27]=[b("MBR")])),_:1,__:[27]})]),_:1},8,["modelValue"])]),_:1},8,["label"]),l(y,{label:e.$t("storageFilesystems.partitionDialog.partitions")},{default:s(()=>[f("div",gt,[(n(!0),$(T,null,E(p.value.partitions,(a,B)=>(n(),$("div",{key:B,class:"partition-item"},[l(qe,{modelValue:a.size,"onUpdate:modelValue":S=>a.size=S,min:1,max:je(a),step:a.unit==="%"?1:a.unit==="G"?10:100,precision:0},null,8,["modelValue","onUpdate:modelValue","max","step"]),l(k,{modelValue:a.unit,"onUpdate:modelValue":S=>a.unit=S,style:{width:"100px","margin-left":"10px"},onChange:S=>We(a,S)},{default:s(()=>[l(i,{label:"MB",value:"M"}),l(i,{label:"GB",value:"G"}),l(i,{label:"%",value:"%"})]),_:2},1032,["modelValue","onUpdate:modelValue","onChange"]),l(k,{modelValue:a.type,"onUpdate:modelValue":S=>a.type=S,style:{width:"150px","margin-left":"10px"}},{default:s(()=>[l(i,{label:"Linux",value:"8300"}),l(i,{label:"Linux swap",value:"8200"}),l(i,{label:"EFI System",value:"EF00"}),l(i,{label:"Microsoft basic data",value:"0700"})]),_:2},1032,["modelValue","onUpdate:modelValue"]),l(o,{onClick:S=>Le(B),type:"danger",size:"small"},{default:s(()=>[l(z(_),{icon:"mdi:delete"})]),_:2},1032,["onClick"]),f("span",bt,m(Ze(a)),1)]))),128))]),l(o,{onClick:Ne,type:"primary",size:"small"},{default:s(()=>[b(m(e.$t("storageFilesystems.partitionDialog.addPartition")),1)]),_:1})]),_:1},8,["label"])]),_:1},8,["model"])]),_:1},8,["modelValue","title"])],64)}}}),_t=Qe(wt,[["__scopeId","data-v-f319b1ff"]]);export{_t as default};
